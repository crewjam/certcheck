#!/bin/bash
set -e
CERTCHECK_CONF=${CERTCHECK_CONF-$HOME/.certcheck.conf}

host=$1
[ ! -z "$host" ]

lego_path=$(git config -f $CERTCHECK_CONF --get lego.path)
lego_path=${lego_path:-$HOME/.lego}
[ ! -z "$lego_path" ]

namespace=$(git config -f $CERTCHECK_CONF --get cert.$host.namespace)
namespace=${namespace:-default}

secret=$(git config -f $CERTCHECK_CONF --get cert.$host.secret)
[ ! -z "$secret" ]

# sign in to the cluster (optional)
gke_cluster=$(git config -f $CERTCHECK_CONF --get cert.$host.gke-cluster)
if [ ! -z "$gke_cluster" ] ; then
  project=$(git config -f $CERTCHECK_CONF --get cert.$host.project)
  [ ! -z "$project" ]
  account=$(git config -f $CERTCHECK_CONF --get cert.$host.account)
  [ ! -z "$account" ]
  gke_zone=$(git config -f $CERTCHECK_CONF --get cert.$host.gke-zone)
  [ ! -z "$gke_zone" ]
  gcloud --project=$project --account=$account container clusters --zone $gke_zone get-credentials $gke_cluster
fi

echo "apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: $secret
data:
  https.key: \"$(base64 -w 0 $lego_path/certificates/$host.key)\"
  https.crt: \"$(base64 -w 0 $lego_path/certificates/$host.crt)\"
" | (set -x; kubectl --namespace $namespace apply -f -)
